on: 
  push: 
    branches:
     - '*'
env:
  REGISTRY_PREFIX: ghcr.io/${{github.repository}}
  IMG_GOLANG: golang:1.15-alpine
jobs:
  
  todos:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [golang-image]
    steps:
      - uses: actions/checkout@v2
      - run: if grep -rni '@to\do:'; then exit 1; fi
  conflicts:
    runs-on: ubuntu-latest
    needs: [golang-image]
    steps:
      - uses: actions/checkout@v2
      - run: if grep -rni '^<<<\<<<< '; then exit 1; fi
      - run: if grep -rni '^===\====$'; then exit 1; fi
      - run: if grep -rni '^>>>\>>>> '; then exit 1; fi
  gitflow:
    runs-on: ubuntu-latest
    if: "!contains(github.ref, 'master')"
    needs: [golang-image]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: if ! git log --pretty=format:'%H' | grep $(git log --pretty=format:'%H' -n 1 origin/master); then exit 1; fi

  unit-tests:
    runs-on: ubuntu-latest
    needs: [todos, conflicts, gitflow]
    steps:
      - uses: actions/checkout@v2
      - run: echo "${{ secrets.ghcr_token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: make docker-test APP_ENV_IMAGE=$REGISTRY_PREFIX/$IMG_GOLANG
  linting:
    runs-on: ubuntu-latest
    needs: [todos, conflicts, gitflow]
    steps:
      - uses: actions/checkout@v2
      - run: echo "${{ secrets.ghcr_token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: make docker-lint APP_ENV_IMAGE=$REGISTRY_PREFIX/$IMG_GOLANG
