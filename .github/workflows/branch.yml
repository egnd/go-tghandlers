name: push branch updates
on: 
  push: 
    branches:
     - '*'
env:
  REGISTRY_URL: ghcr.io
  REGISTRY_PREFIX: ghcr.io/${{github.repository}}
  IMG_ALPINE: alpine:3.12
  IMG_GOLANG: golang:1.15-alpine
jobs:
  alpine-image:
    runs-on: ubuntu-latest
    steps:
      - uses: azure/docker-login@v1
        with:
          login-server: $REGISTRY_URL
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      # - run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - run: docker pull $IMG_ALPINE
      - run: docker tag $IMG_ALPINE $REGISTRY_PREFIX/$IMG_ALPINE
      - run: docker images
      - run: docker push $REGISTRY_PREFIX/$IMG_ALPINE
  golang-image:
    runs-on: ubuntu-latest
    steps:
      - uses: azure/docker-login@v1
        with:
          login-server: $REGISTRY_URL
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - uses: actions/checkout@v2
      - run: docker pull $REGISTRY_PREFIX/$IMG_GOLANG || echo "no image"
      - run: docker build --tag=$REGISTRY_PREFIX/$IMG_GOLANG --target=env --build-arg BASE_IMG=$IMG_GOLANG --cache-from=$REGISTRY_PREFIX/$IMG_GOLANG .
      - run: docker images
      - run: docker push $REGISTRY_PREFIX/$IMG_GOLANG
  
  todos:
    runs-on: ubuntu-latest
    container: 
      image: $REGISTRY_PREFIX/$IMG_ALPINE
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    continue-on-error: true
    needs: [alpine-image, golang-image]
    steps:
      - uses: actions/checkout@v2
      - run: apk add -q git grep
      - run: if grep -rni '@to\do:'; then exit 1; fi
  conflicts:
    runs-on: ubuntu-latest
    container: 
      image: $REGISTRY_PREFIX/$IMG_ALPINE
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    needs: [alpine-image, golang-image]
    steps:
      - uses: actions/checkout@v2
      - run: apk add -q git grep
      - run: if grep -rni '^<<<\<<<< '; then exit 1; fi
      - run: if grep -rni '^===\====$'; then exit 1; fi
      - run: if grep -rni '^>>>\>>>> '; then exit 1; fi
  gitflow:
    runs-on: ubuntu-latest
    container: 
      image: $REGISTRY_PREFIX/$IMG_ALPINE
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    if: "!contains(github.ref, 'master')"
    needs: [alpine-image, golang-image]
    steps:
      - uses: actions/checkout@v2
      - run: apk add -q git grep
      - run: git remote update
      - run: if ! git log --pretty=format:'%H' | grep $(git log --pretty=format:'%H' -n 1 origin/master); then exit 1; fi

  unit-tests:
    runs-on: ubuntu-latest
    container: 
      image: $REGISTRY_PREFIX/$IMG_GOLANG
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    needs: [todos, conflicts, gitflow]
    steps:
      - uses: actions/checkout@v2
      - run: make test
      - run: go tool cover -func=coverage.out
  linting:
    runs-on: ubuntu-latest
    container: 
      image: $REGISTRY_PREFIX/$IMG_GOLANG
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    needs: [todos, conflicts, gitflow]
    steps:
      - uses: actions/checkout@v2
      - run: make lint
